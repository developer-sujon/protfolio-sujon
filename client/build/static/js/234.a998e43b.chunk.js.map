{"version":3,"file":"static/js/234.a998e43b.chunk.js","mappings":"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","sources":["APIRequest/BlogRequest.js","APIRequest/RestClient.js","components/Blog/Blog.jsx","APIRequest/ProfileRequest.js","components/Sidebar/Sidebar.jsx","helper/HtmlParse.js","helper/ToastMessage.js"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetBlogList, SetBlog } from \"../redux/slices/BlogSlice\";\r\n\r\nclass BlogRequest {\r\n  static async BlogDropDown(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(`/Blog/BlogDropDown`);\r\n\r\n    if (data) {\r\n      store.dispatch(SetBlogList(data));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async BlogSingle(id) {\r\n    const { data } = await RestClient.getRequest(`/Blog/BlogSingle/${id}`);\r\n\r\n    if (data) {\r\n      store.dispatch(SetBlog(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BlogRequest;\r\n","//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//External Import\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dateFormat from \"dateformat\";\r\nimport { AiOutlineEye } from \"react-icons/ai\";\r\n\r\n//Internal Import\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\nimport BlogRequest from \"../../APIRequest/BlogRequest\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nconst Blog = () => {\r\n  useEffect(() => {\r\n    BlogRequest.BlogDropDown();\r\n  }, []);\r\n\r\n  const { BlogList } = useSelector((state) => state.Blog);\r\n\r\n  return (\r\n    <div className=\"wrapper sticky-parent\">\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n        <div className=\"section mt-0\">\r\n          <h1 className=\"title title--h1 title__separate\">Blog</h1>\r\n        </div>\r\n        <div className=\"news-grid section\">\r\n          {BlogList &&\r\n            BlogList.map((blog) => {\r\n              return (\r\n                <article className=\"news-item box\">\r\n                  <div className=\"news-item__image-wrap overlay overlay--45\">\r\n                    <div className=\"news-item__date\">\r\n                      {dateFormat(blog.createdAt, \"dS mmm\")}\r\n                    </div>\r\n                    <div className=\"view-blog\">\r\n                      <AiOutlineEye /> {blog.View}\r\n                    </div>\r\n                    <Link\r\n                      className=\"news-item__link\"\r\n                      to={`/blog/${blog._id}`}\r\n                    ></Link>\r\n                    <img\r\n                      className=\"cover ls-is-cached lazyloaded\"\r\n                      src={blog.Image}\r\n                      alt=\"blogImage\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"news-item__caption\">\r\n                    <h3 className=\"title title--h3\">{HtmlParse(blog.Title)}</h3>\r\n                    <p>{HtmlParse(blog.Description)}</p>\r\n                  </div>\r\n                </article>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\n\r\nclass ProfileRequest {\r\n  static async UserDetails() {\r\n    const { data } = await RestClient.getRequest(\r\n      \"/admin/SelectUser/devoloper.sujon@gmail.com\",\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserUpdate(postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"/user/UserUpdate\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserChecgePassword(postBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      \"/user/UserChangePassword\",\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/SendRecoveryOtp/${email}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.setOtpEmail(email);\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyRecoveryOtp/${SessionHelper.getOtpEmail()}/${otp}`,\r\n    );\r\n\r\n    if (data) {\r\n      SessionHelper.setOtpCode(otp);\r\n      ToastMessage.successMessage(data.message);\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(Password) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/User/RecoveryResetPass/${SessionHelper.getOtpEmail()}/${SessionHelper.getOtpCode()}`,\r\n      Password,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileRequest;\r\n","//External Import\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport ProfileRequest from \"../../APIRequest/ProfileRequest\";\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\n\r\nconst Sidebar = () => {\r\n  useEffect(() => {\r\n    ProfileRequest.UserDetails();\r\n  }, []);\r\n\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div\r\n        className=\"sticky-column is_stuck\"\r\n        style={{ position: \"fixed\", top: \"-24.531px\", width: \"200px\" }}\r\n      >\r\n        <div className=\"avatar-wrap\">\r\n          <svg className=\"avatar avatar--180\" viewBox=\"0 0 188 188\">\r\n            <g className=\"avatar__box\">\r\n              <image xlinkHref={user?.Image} height=\"100%\" width=\"100%\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h3 className=\"title sidebar__user-name\">\r\n            <span className=\"weight--500\"> {HtmlParse(user?.Name)} </span>\r\n          </h3>\r\n          <div className=\"badge badge--gray\">{HtmlParse(user?.Post)}</div>\r\n\r\n          <div className=\"social\">\r\n            <a className=\"social__link\" href={user?.Github} target=\"_blank\">\r\n              <i className=\"font-icon icon-github\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Linkedin} target=\"_blank\">\r\n              <i className=\"font-icon icon-linkedin2\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Twitter} target=\"_blank\">\r\n              <i className=\"font-icon icon-twitter\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Facebook} target=\"_blank\">\r\n              <i className=\"font-icon icon-facebook\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <ul className=\"contact-block\">\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Birthday\"\r\n          >\r\n            <i className=\"font-icon icon-calendar2\" />\r\n            {user?.Birthday}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Address\"\r\n          >\r\n            <i className=\"font-icon icon-map-pin\" />\r\n            {HtmlParse(user?.Address)}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"E-mail\"\r\n          >\r\n            <a href=\"mailto:devoloper.sujon@gmail\">\r\n              <i className=\"font-icon icon-mail\" />\r\n              {user?.Email}\r\n            </a>\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Phone\"\r\n          >\r\n            <i className=\"font-icon icon-smartphone\" />\r\n            <a href={`tel:${user?.Phone}`}>{user?.Phone}</a>\r\n          </li>\r\n        </ul>\r\n        <a className=\"btn\" href={user?.Cv} target=\"_blank\">\r\n          <i className=\"font-icon icon-download\" /> Download CV\r\n          <span style={{ top: \"-5.625px\", left: \"109.5px\" }} />\r\n        </a>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","//Internal Import\r\nimport parse from \"html-react-parser\";\r\n\r\nconst HtmlParse = (content) => {\r\n  return parse(`${content}`);\r\n};\r\n\r\nexport default HtmlParse;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["BlogRequest","pageNumber","perPage","searchKey","RestClient","data","store","SetBlogList","id","SetBlog","axiosHeaders","axios","SessionHelper","ResponseReturn","response","RemoveLoading","ErrorReturn","error","status","ToastMessage","message","SetLogout","RemoveUserDetails","url","SetLoading","then","catch","postBody","useEffect","BlogList","useSelector","state","Blog","className","map","blog","dateFormat","createdAt","View","to","_id","src","Image","alt","HtmlParse","Title","Description","ProfileRequest","SetUserDetails","email","otp","Password","user","Profile","style","position","top","width","viewBox","xlinkHref","height","Name","Post","href","Github","target","Linkedin","Twitter","Facebook","title","Birthday","Address","Email","Phone","Cv","left","content","parse","msg","cogoToast"],"sourceRoot":""}
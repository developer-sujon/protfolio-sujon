{"version":3,"file":"static/js/276.b154f875.chunk.js","mappings":"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","sources":["APIRequest/RestClient.js","components/AboutMe/AboutMe.jsx","APIRequest/ClientRequest.js","components/Clients/Clients.jsx","APIRequest/TestimonialRequest.js","components/Testimonials/Testimonials.jsx","APIRequest/ServiceRequest.js","components/WhatDoing/WhatDoing.jsx","components/About/About.jsx","APIRequest/ProfileRequest.js","components/Sidebar/Sidebar.jsx","helper/HtmlParse.js","helper/ToastMessage.js"],"sourcesContent":["//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"https://manage.devsujon.com/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//External Import\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\n\r\nconst AboutMe = () => {\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  return (\r\n    <div className=\"section mt-0\">\r\n      <div className=\"pt-2 pt-sm-3\">\r\n        {user?.AboutMe ? HtmlParse(user?.AboutMe) : \"Loading....\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetClientList } from \"../redux/slices/ClientSlice\";\r\n\r\nclass ClientRequest {\r\n  static async ClientDropDown(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(`/Client/ClientDropDown`);\r\n\r\n    if (data) {\r\n      store.dispatch(SetClientList(data));\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ClientRequest;\r\n","//External Import\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n//Internal Import\r\nimport ClientRequest from \"../../APIRequest/ClientRequest\";\r\n\r\nconst SliderItem = ({ Image }) => {\r\n  return (\r\n    <div\r\n      className=\"swiper-slide swiper-slide-active\"\r\n      style={{ width: 150, marginRight: 30 }}\r\n    >\r\n      <img src={Image} alt=\"Logo\" style={{maxWidth: '50px'}}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Clients = () => {\r\n  useEffect(() => {\r\n    ClientRequest.ClientDropDown();\r\n  }, []);\r\n\r\n  const { ClientList } = useSelector((state) => state.Client);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    vertical: false,\r\n    verticalSwiping: true,\r\n    autoplay: true,\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2 className=\"title title--h2\">Clients</h2>\r\n      <Slider {...settings}>\r\n        {ClientList &&\r\n          ClientList.map((Client) => {\r\n            return <SliderItem key={Client?._id} Image={Client?.Image} />;\r\n          })}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clients;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetTestimonialList } from \"../redux/slices/TestimonialSlice\";\r\n\r\nclass TestimonialRequest {\r\n  static async TestimonialDropDown(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Testimonial/TestimonialDropDown`,\r\n    );\r\n    if (data) {\r\n      store.dispatch(SetTestimonialList(data));\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TestimonialRequest;\r\n","//External Import\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n//Internal Import\r\nimport TestimonialRequest from \"../../APIRequest/TestimonialRequest\";\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\n\r\nconst SliderItem = ({ imgUrl, title, description }) => {\r\n  return (\r\n    <div className=\"swiper-slide review-item swiper-slide-active\">\r\n      <svg className=\"avatar avatar--80\" viewBox=\"0 0 84 84\">\r\n        <g className=\"avatar__hexagon\">\r\n          <image xlinkHref={imgUrl} height=\"100%\" width=\"100%\" />\r\n        </g>\r\n      </svg>\r\n      <h4 className=\"title title--h3\"> {HtmlParse(title)}</h4>\r\n      <p className=\"review-item__caption\">{HtmlParse(description)}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Testimonials = () => {\r\n  useEffect(() => {\r\n    TestimonialRequest.TestimonialDropDown();\r\n  }, []);\r\n\r\n  const { TestimonialList } = useSelector((state) => state.Testimonial);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    vertical: false,\r\n    verticalSwiping: true,\r\n    autoplay: true,\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2 className=\"title title--h2\">Testimonials</h2>\r\n      <Slider {...settings}>\r\n        {TestimonialList &&\r\n          TestimonialList.map((testimonial) => {\r\n            return (\r\n              <SliderItem\r\n                key={testimonial?._id}\r\n                imgUrl={testimonial?.Image}\r\n                title={testimonial?.Name}\r\n                description={testimonial?.Description}\r\n              />\r\n            );\r\n          })}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetServiceList } from \"../redux/slices/ServiceSlice\";\r\n\r\nclass ServiceRequest {\r\n  static async ServiceDropDown(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(`/Service/ServiceDropDown`);\r\n\r\n    if (data) {\r\n      store.dispatch(SetServiceList(data));\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ServiceRequest;\r\n","//External Import\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport ServiceRequest from \"../../APIRequest/ServiceRequest\";\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\n\r\nconst WhatDoing = () => {\r\n  useEffect(() => {\r\n    ServiceRequest.ServiceDropDown();\r\n  }, []);\r\n\r\n  const { ServiceList } = useSelector((state) => state.Service);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2 className=\"title title--h2\">What I'm Doing</h2>\r\n      <div className=\"row\">\r\n        {ServiceList &&\r\n          ServiceList.map((service) => {\r\n            return (\r\n              <div className=\"col-12 col-lg-6 case-item-wrap\">\r\n                <div className=\"case-item\" style={{ height: \"191.891px\" }}>\r\n                  <img\r\n                    className=\"case-item__icon\"\r\n                    src={service?.Image}\r\n                    alt={service?.Name}\r\n                  />\r\n                  <h3 className=\"title title--h3\">\r\n                    {HtmlParse(service?.Name)}\r\n                  </h3>\r\n                  <p className=\"case-item__caption\">\r\n                    {HtmlParse(service?.Description)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhatDoing;\r\n","//External Import\r\nimport React from \"react\";\r\n\r\n//Internal Import\r\nimport AboutMe from \"../AboutMe/AboutMe\";\r\nimport Clients from \"../Clients/Clients\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Testimonials from \"../Testimonials/Testimonials\";\r\nimport WhatDoing from \"../WhatDoing/WhatDoing\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"wrapper sticky-parent\">\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n        <h1 className=\"title title--h1 title__separate\">About Me</h1>\r\n        <AboutMe />\r\n        <WhatDoing />\r\n        <Testimonials />\r\n        <Clients />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\n\r\nclass ProfileRequest {\r\n  static async UserDetails() {\r\n    const { data } = await RestClient.getRequest(\r\n      \"/admin/SelectUser/devoloper.sujon@gmail.com\",\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserUpdate(postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"/user/UserUpdate\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserChecgePassword(postBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      \"/user/UserChangePassword\",\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/SendRecoveryOtp/${email}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.setOtpEmail(email);\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyRecoveryOtp/${SessionHelper.getOtpEmail()}/${otp}`,\r\n    );\r\n\r\n    if (data) {\r\n      SessionHelper.setOtpCode(otp);\r\n      ToastMessage.successMessage(data.message);\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(Password) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/User/RecoveryResetPass/${SessionHelper.getOtpEmail()}/${SessionHelper.getOtpCode()}`,\r\n      Password,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileRequest;\r\n","//External Import\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport ProfileRequest from \"../../APIRequest/ProfileRequest\";\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\n\r\nconst Sidebar = () => {\r\n  useEffect(() => {\r\n    ProfileRequest.UserDetails();\r\n  }, []);\r\n\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div\r\n        className=\"sticky-column is_stuck\"\r\n        style={{ position: \"fixed\", top: \"-24.531px\", width: \"200px\" }}\r\n      >\r\n        <div className=\"avatar-wrap\">\r\n          <svg className=\"avatar avatar--180\" viewBox=\"0 0 188 188\">\r\n            <g className=\"avatar__box\">\r\n              <image xlinkHref={user?.Image} height=\"100%\" width=\"100%\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h3 className=\"title sidebar__user-name\">\r\n            <span className=\"weight--500\">\r\n              {user?.Name ? HtmlParse(user?.Name) : \"Loading....\"}\r\n            </span>\r\n          </h3>\r\n          <div className=\"badge badge--gray\">\r\n            {user?.Post ? HtmlParse(user?.Post) : \"Loading....\"}\r\n          </div>\r\n\r\n          <div className=\"social\">\r\n            <a className=\"social__link\" href={user?.Github} target=\"_blank\">\r\n              <i className=\"font-icon icon-github\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Linkedin} target=\"_blank\">\r\n              <i className=\"font-icon icon-linkedin2\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Twitter} target=\"_blank\">\r\n              <i className=\"font-icon icon-twitter\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Facebook} target=\"_blank\">\r\n              <i className=\"font-icon icon-facebook\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <ul className=\"contact-block\">\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Birthday\"\r\n          >\r\n            <i className=\"font-icon icon-calendar2\" />\r\n            {user?.Birthday ? user?.Birthday : \"Loading....\"}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Address\"\r\n          >\r\n            <i className=\"font-icon icon-map-pin\" />\r\n            {user?.Address ? HtmlParse(user?.Address) : \"Loading....\"}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"E-mail\"\r\n          >\r\n            <a href=\"mailto:devoloper.sujon@gmail\">\r\n              <i className=\"font-icon icon-mail\" />\r\n              {user?.Email ? HtmlParse(user?.Email) : \"Loading....\"}\r\n            </a>\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Phone\"\r\n          >\r\n            <i className=\"font-icon icon-smartphone\" />\r\n            <a href={`tel:${user?.Phone}`}>\r\n              {user?.Phone ? HtmlParse(user?.Phone) : \"Loading....\"}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <a className=\"btn\" href={user?.Cv} target=\"_blank\">\r\n          <i className=\"font-icon icon-download\" /> Download CV\r\n          <span style={{ top: \"-5.625px\", left: \"109.5px\" }} />\r\n        </a>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","//Internal Import\r\nimport parse from \"html-react-parser\";\r\n\r\nconst HtmlParse = (content) => {\r\n  return parse(`${content}`);\r\n};\r\n\r\nexport default HtmlParse;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axiosHeaders","axios","headers","common","SessionHelper","getToken","baseURL","post","ErrorReturn","error","response","status","ToastMessage","errorMessage","data","message","store","dispatch","SetLogout","RemoveUserDetails","getRequest","url","SetLoading","then","RemoveLoading","catch","postRequest","postBody","updateRequest","putRequest","deleteRequest","AboutMe","user","useSelector","state","Profile","_jsx","className","children","HtmlParse","ClientDropDown","pageNumber","perPage","searchKey","RestClient","SetClientList","SliderItem","_ref","Image","style","width","marginRight","src","alt","maxWidth","Clients","useEffect","ClientRequest","ClientList","Client","_jsxs","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","verticalSwiping","autoplay","map","_id","TestimonialDropDown","SetTestimonialList","imgUrl","title","description","viewBox","xlinkHref","height","Testimonials","TestimonialRequest","TestimonialList","Testimonial","testimonial","Name","Description","ServiceDropDown","SetServiceList","WhatDoing","ServiceRequest","ServiceList","Service","service","About","Sidebar","UserDetails","SetUserDetails","UserUpdate","successMessage","UserChecgePassword","SendRecoveryOtp","email","concat","setOtpEmail","VerifyRecoveryOtp","otp","getOtpEmail","setOtpCode","RecoveryResetPass","Password","getOtpCode","ProfileRequest","position","top","Post","href","Github","target","Linkedin","Twitter","Facebook","Birthday","Address","Email","Phone","Cv","left","content","parse","msg","cogoToast","success"],"sourceRoot":""}
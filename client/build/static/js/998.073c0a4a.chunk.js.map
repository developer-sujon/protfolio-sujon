{"version":3,"file":"static/js/998.073c0a4a.chunk.js","mappings":"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","sources":["APIRequest/RestClient.js","APIRequest/EmailRequest.js","components/Contact/Contact.jsx","APIRequest/ProfileRequest.js","components/Sidebar/Sidebar.jsx","helper/HtmlParse.js","helper/ToastMessage.js"],"sourcesContent":["//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetEmailList, SetTotalPage } from \"../redux/slices/EmailSlice\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\n\r\nclass EmailRequest {\r\n  static async EmailList(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Email/EmailList/${pageNumber}/${perPage}/${searchKey}`,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetEmailList(data[0]?.Data));\r\n      store.dispatch(SetTotalPage(data[0]?.Total[0]?.count));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async EmailCreate(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/Email/EmailCreate`,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async EmailDelete(id) {\r\n    await RestClient.deleteRequest(`/Email/EmailDelete/${id}`);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default EmailRequest;\r\n","//External Import\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport EmailRequest from \"../../APIRequest/EmailRequest\";\r\n\r\nconst Contact = () => {\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    EmailRequest.EmailCreate(data).then((result) => {\r\n      if (result) {\r\n        reset();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper sticky-parent\">\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n        <div className=\"section mt-0\">\r\n          <h1 className=\"title title--h1 title__separate\">Contact</h1>\r\n        </div>\r\n        <div class=\"map section\" id=\"map\">\r\n          <iframe\r\n            src={user?.MapLink}\r\n            width={600}\r\n            height={450}\r\n            style={{ border: 0 }}\r\n            allowFullScreen=\"\"\r\n            loading=\"lazy\"\r\n            referrerPolicy=\"no-referrer-when-downgrade\"\r\n          />\r\n        </div>\r\n        <h2 class=\"title title--h2\">Contact Form</h2>\r\n        <form\r\n          id=\"contact-form\"\r\n          className=\"contact-form\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <div className=\"row\">\r\n            <div\r\n              className={`${\r\n                errors.Name\r\n                  ? \"form-group col-12 col-md-6  has-error has-danger\"\r\n                  : \"form-group col-12 col-md-6\"\r\n              }`}\r\n            >\r\n              <i className=\"font-icon icon-user\" />\r\n              <input\r\n                type=\"text\"\r\n                className=\"input input__icon form-control\"\r\n                id=\"Name\"\r\n                name=\"Name\"\r\n                placeholder=\"Full name\"\r\n                {...register(\"Name\", { required: true })}\r\n              />\r\n\r\n              {errors.Name && (\r\n                <div className=\"help-block with-errors\">\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>Name is Required</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`${\r\n                errors.To\r\n                  ? \"form-group col-12 col-md-6  has-error has-danger\"\r\n                  : \"form-group col-12 col-md-6\"\r\n              }`}\r\n            >\r\n              <i className=\"font-icon icon-at\" />\r\n              <input\r\n                type=\"email\"\r\n                className=\"input input__icon form-control\"\r\n                id=\"To\"\r\n                name=\"To\"\r\n                placeholder=\"Email address\"\r\n                {...register(\"To\", {\r\n                  required: true,\r\n                  pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                })}\r\n              />\r\n\r\n              {errors.To && (\r\n                <div className=\"help-block with-errors\">\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>Email is incorrect</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`${\r\n                errors.Message\r\n                  ? \"form-group col-12 col-md-12  has-error has-danger\"\r\n                  : \"form-group col-12 col-md-12\"\r\n              }`}\r\n            >\r\n              <textarea\r\n                className=\"textarea form-control\"\r\n                id=\"messageContact\"\r\n                name=\"messageContact\"\r\n                placeholder=\"Your Message\"\r\n                rows={4}\r\n                style={{\r\n                  overflow: \"hidden\",\r\n                  overflowWrap: \"break-word\",\r\n                  height: 118,\r\n                }}\r\n                {...register(\"Message\", {\r\n                  required: true,\r\n                })}\r\n              />\r\n\r\n              {errors.Message && (\r\n                <div className=\"help-block with-errors\">\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>Message is Required</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 order-2 order-md-1 text-center text-md-left\">\r\n              <div id=\"validator-contact\" className=\"hidden\" />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 order-1 order-md-2 text-right\">\r\n              <button type=\"submit\" className=\"btn disabled\">\r\n                <i className=\"font-icon icon-send\" /> Send Message\r\n                <span />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\n\r\nclass ProfileRequest {\r\n  static async UserDetails() {\r\n    const { data } = await RestClient.getRequest(\r\n      \"/admin/SelectUser/devoloper.sujon@gmail.com\",\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserUpdate(postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"/user/UserUpdate\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserChecgePassword(postBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      \"/user/UserChangePassword\",\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/SendRecoveryOtp/${email}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.setOtpEmail(email);\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyRecoveryOtp/${SessionHelper.getOtpEmail()}/${otp}`,\r\n    );\r\n\r\n    if (data) {\r\n      SessionHelper.setOtpCode(otp);\r\n      ToastMessage.successMessage(data.message);\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(Password) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/User/RecoveryResetPass/${SessionHelper.getOtpEmail()}/${SessionHelper.getOtpCode()}`,\r\n      Password,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileRequest;\r\n","//External Import\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport ProfileRequest from \"../../APIRequest/ProfileRequest\";\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\n\r\nconst Sidebar = () => {\r\n  useEffect(() => {\r\n    ProfileRequest.UserDetails();\r\n  }, []);\r\n\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div\r\n        className=\"sticky-column is_stuck\"\r\n        style={{ position: \"fixed\", top: \"-24.531px\", width: \"200px\" }}\r\n      >\r\n        <div className=\"avatar-wrap\">\r\n          <svg className=\"avatar avatar--180\" viewBox=\"0 0 188 188\">\r\n            <g className=\"avatar__box\">\r\n              <image xlinkHref={user?.Image} height=\"100%\" width=\"100%\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h3 className=\"title sidebar__user-name\">\r\n            <span className=\"weight--500\"> {HtmlParse(user?.Name)} </span>\r\n          </h3>\r\n          <div className=\"badge badge--gray\">{HtmlParse(user?.Post)}</div>\r\n\r\n          <div className=\"social\">\r\n            <a className=\"social__link\" href={user?.Github} target=\"_blank\">\r\n              <i className=\"font-icon icon-github\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Linkedin} target=\"_blank\">\r\n              <i className=\"font-icon icon-linkedin2\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Twitter} target=\"_blank\">\r\n              <i className=\"font-icon icon-twitter\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Facebook} target=\"_blank\">\r\n              <i className=\"font-icon icon-facebook\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <ul className=\"contact-block\">\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Birthday\"\r\n          >\r\n            <i className=\"font-icon icon-calendar2\" />\r\n            {user?.Birthday}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Address\"\r\n          >\r\n            <i className=\"font-icon icon-map-pin\" />\r\n            {HtmlParse(user?.Address)}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"E-mail\"\r\n          >\r\n            <a href=\"mailto:devoloper.sujon@gmail\">\r\n              <i className=\"font-icon icon-mail\" />\r\n              {user?.Email}\r\n            </a>\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Phone\"\r\n          >\r\n            <i className=\"font-icon icon-smartphone\" />\r\n            <a href={`tel:${user?.Phone}`}>{user?.Phone}</a>\r\n          </li>\r\n        </ul>\r\n        <a className=\"btn\" href={user?.Cv} target=\"_blank\">\r\n          <i className=\"font-icon icon-download\" /> Download CV\r\n          <span style={{ top: \"-5.625px\", left: \"109.5px\" }} />\r\n        </a>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","//Internal Import\r\nimport parse from \"html-react-parser\";\r\n\r\nconst HtmlParse = (content) => {\r\n  return parse(`${content}`);\r\n};\r\n\r\nexport default HtmlParse;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axiosHeaders","axios","SessionHelper","ResponseReturn","response","store","RemoveLoading","ErrorReturn","error","status","ToastMessage","data","message","SetLogout","RemoveUserDetails","RestClient","url","SetLoading","then","catch","postBody","EmailRequest","pageNumber","perPage","searchKey","SetEmailList","Data","SetTotalPage","Total","count","id","user","useSelector","state","Profile","useForm","register","handleSubmit","reset","errors","formState","className","Sidebar","class","src","MapLink","width","height","style","border","allowFullScreen","loading","referrerPolicy","onSubmit","result","Name","type","name","placeholder","required","To","pattern","Message","rows","overflow","overflowWrap","ProfileRequest","SetUserDetails","email","otp","Password","useEffect","position","top","viewBox","xlinkHref","Image","HtmlParse","Post","href","Github","target","Linkedin","Twitter","Facebook","title","Birthday","Address","Email","Phone","Cv","left","content","parse","msg","cogoToast"],"sourceRoot":""}
{"version":3,"file":"static/js/998.4824e65c.chunk.js","mappings":"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","sources":["APIRequest/RestClient.js","APIRequest/EmailRequest.js","components/Contact/Contact.jsx","APIRequest/ProfileRequest.js","components/Sidebar/Sidebar.jsx","helper/HtmlParse.js","helper/ToastMessage.js"],"sourcesContent":["//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"https://manage.devsujon.com/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetEmailList, SetTotalPage } from \"../redux/slices/EmailSlice\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\n\r\nclass EmailRequest {\r\n  static async EmailList(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Email/EmailList/${pageNumber}/${perPage}/${searchKey}`,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetEmailList(data[0]?.Data));\r\n      store.dispatch(SetTotalPage(data[0]?.Total[0]?.count));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async EmailCreate(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/Email/EmailCreate`,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async EmailDelete(id) {\r\n    await RestClient.deleteRequest(`/Email/EmailDelete/${id}`);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default EmailRequest;\r\n","//External Import\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport EmailRequest from \"../../APIRequest/EmailRequest\";\r\n\r\nconst Contact = () => {\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    EmailRequest.EmailCreate(data).then((result) => {\r\n      if (result) {\r\n        reset();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper sticky-parent\">\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n        <div className=\"section mt-0\">\r\n          <h1 className=\"title title--h1 title__separate\">Contact</h1>\r\n        </div>\r\n        <div class=\"map section\" id=\"map\">\r\n          <iframe\r\n            src={user?.MapLink}\r\n            width={600}\r\n            height={450}\r\n            style={{ border: 0 }}\r\n            allowFullScreen=\"\"\r\n            loading=\"lazy\"\r\n            referrerPolicy=\"no-referrer-when-downgrade\"\r\n          />\r\n        </div>\r\n        <h2 class=\"title title--h2\">Contact Form</h2>\r\n        <form\r\n          id=\"contact-form\"\r\n          className=\"contact-form\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <div className=\"row\">\r\n            <div\r\n              className={`${\r\n                errors.Name\r\n                  ? \"form-group col-12 col-md-6  has-error has-danger\"\r\n                  : \"form-group col-12 col-md-6\"\r\n              }`}\r\n            >\r\n              <i className=\"font-icon icon-user\" />\r\n              <input\r\n                type=\"text\"\r\n                className=\"input input__icon form-control\"\r\n                id=\"Name\"\r\n                name=\"Name\"\r\n                placeholder=\"Full name\"\r\n                {...register(\"Name\", { required: true })}\r\n              />\r\n\r\n              {errors.Name && (\r\n                <div className=\"help-block with-errors\">\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>Name is Required</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`${\r\n                errors.To\r\n                  ? \"form-group col-12 col-md-6  has-error has-danger\"\r\n                  : \"form-group col-12 col-md-6\"\r\n              }`}\r\n            >\r\n              <i className=\"font-icon icon-at\" />\r\n              <input\r\n                type=\"email\"\r\n                className=\"input input__icon form-control\"\r\n                id=\"To\"\r\n                name=\"To\"\r\n                placeholder=\"Email address\"\r\n                {...register(\"To\", {\r\n                  required: true,\r\n                  pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                })}\r\n              />\r\n\r\n              {errors.To && (\r\n                <div className=\"help-block with-errors\">\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>Email is incorrect</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`${\r\n                errors.Message\r\n                  ? \"form-group col-12 col-md-12  has-error has-danger\"\r\n                  : \"form-group col-12 col-md-12\"\r\n              }`}\r\n            >\r\n              <textarea\r\n                className=\"textarea form-control\"\r\n                id=\"messageContact\"\r\n                name=\"messageContact\"\r\n                placeholder=\"Your Message\"\r\n                rows={4}\r\n                style={{\r\n                  overflow: \"hidden\",\r\n                  overflowWrap: \"break-word\",\r\n                  height: 118,\r\n                }}\r\n                {...register(\"Message\", {\r\n                  required: true,\r\n                })}\r\n              />\r\n\r\n              {errors.Message && (\r\n                <div className=\"help-block with-errors\">\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>Message is Required</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 order-2 order-md-1 text-center text-md-left\">\r\n              <div id=\"validator-contact\" className=\"hidden\" />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 order-1 order-md-2 text-right\">\r\n              <button type=\"submit\" className=\"btn disabled\">\r\n                <i className=\"font-icon icon-send\" /> Send Message\r\n                <span />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\n\r\nclass ProfileRequest {\r\n  static async UserDetails() {\r\n    const { data } = await RestClient.getRequest(\r\n      \"/admin/SelectUser/devoloper.sujon@gmail.com\",\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserUpdate(postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"/user/UserUpdate\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserChecgePassword(postBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      \"/user/UserChangePassword\",\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/SendRecoveryOtp/${email}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.setOtpEmail(email);\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyRecoveryOtp/${SessionHelper.getOtpEmail()}/${otp}`,\r\n    );\r\n\r\n    if (data) {\r\n      SessionHelper.setOtpCode(otp);\r\n      ToastMessage.successMessage(data.message);\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(Password) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/User/RecoveryResetPass/${SessionHelper.getOtpEmail()}/${SessionHelper.getOtpCode()}`,\r\n      Password,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileRequest;\r\n","//External Import\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//Internal Import\r\nimport ProfileRequest from \"../../APIRequest/ProfileRequest\";\r\nimport HtmlParse from \"../../helper/HtmlParse\";\r\n\r\nconst Sidebar = () => {\r\n  useEffect(() => {\r\n    ProfileRequest.UserDetails();\r\n  }, []);\r\n\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div\r\n        className=\"sticky-column is_stuck\"\r\n        style={{ position: \"fixed\", top: \"-24.531px\", width: \"200px\" }}\r\n      >\r\n        <div className=\"avatar-wrap\">\r\n          <svg className=\"avatar avatar--180\" viewBox=\"0 0 188 188\">\r\n            <g className=\"avatar__box\">\r\n              <image xlinkHref={user?.Image} height=\"100%\" width=\"100%\" />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h3 className=\"title sidebar__user-name\">\r\n            <span className=\"weight--500\">\r\n              {user?.Name ? HtmlParse(user?.Name) : \"Loading....\"}\r\n            </span>\r\n          </h3>\r\n          <div className=\"badge badge--gray\">\r\n            {user?.Post ? HtmlParse(user?.Post) : \"Loading....\"}\r\n          </div>\r\n\r\n          <div className=\"social\">\r\n            <a className=\"social__link\" href={user?.Github} target=\"_blank\">\r\n              <i className=\"font-icon icon-github\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Linkedin} target=\"_blank\">\r\n              <i className=\"font-icon icon-linkedin2\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Twitter} target=\"_blank\">\r\n              <i className=\"font-icon icon-twitter\" />\r\n            </a>\r\n            <a className=\"social__link\" href={user?.Facebook} target=\"_blank\">\r\n              <i className=\"font-icon icon-facebook\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <ul className=\"contact-block\">\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Birthday\"\r\n          >\r\n            <i className=\"font-icon icon-calendar2\" />\r\n            {user?.Birthday ? user?.Birthday : \"Loading....\"}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Address\"\r\n          >\r\n            <i className=\"font-icon icon-map-pin\" />\r\n            {user?.Address ? HtmlParse(user?.Address) : \"Loading....\"}\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"E-mail\"\r\n          >\r\n            <a href=\"mailto:devoloper.sujon@gmail\">\r\n              <i className=\"font-icon icon-mail\" />\r\n              {user?.Email ? HtmlParse(user?.Email) : \"Loading....\"}\r\n            </a>\r\n          </li>\r\n          <li\r\n            className=\"contact-block__item\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title\r\n            data-original-title=\"Phone\"\r\n          >\r\n            <i className=\"font-icon icon-smartphone\" />\r\n            <a href={`tel:${user?.Phone}`}>\r\n              {user?.Phone ? HtmlParse(user?.Phone) : \"Loading....\"}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <a className=\"btn\" href={user?.Cv} target=\"_blank\">\r\n          <i className=\"font-icon icon-download\" /> Download CV\r\n          <span style={{ top: \"-5.625px\", left: \"109.5px\" }} />\r\n        </a>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","//Internal Import\r\nimport parse from \"html-react-parser\";\r\n\r\nconst HtmlParse = (content) => {\r\n  return parse(`${content}`);\r\n};\r\n\r\nexport default HtmlParse;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axiosHeaders","axios","headers","common","SessionHelper","getToken","baseURL","post","ErrorReturn","error","response","status","ToastMessage","errorMessage","data","message","store","dispatch","SetLogout","RemoveUserDetails","getRequest","url","SetLoading","then","RemoveLoading","catch","postRequest","postBody","updateRequest","putRequest","deleteRequest","EmailList","pageNumber","perPage","searchKey","RestClient","concat","_data$","_data$2","_data$2$Total$","SetEmailList","Data","SetTotalPage","Total","count","EmailCreate","successMessage","EmailDelete","id","Contact","user","useSelector","state","Profile","register","handleSubmit","reset","formState","errors","useForm","_jsxs","className","children","_jsx","Sidebar","class","src","MapLink","width","height","style","border","allowFullScreen","loading","referrerPolicy","onSubmit","EmailRequest","result","Name","type","name","placeholder","required","To","pattern","Message","rows","overflow","overflowWrap","UserDetails","SetUserDetails","UserUpdate","UserChecgePassword","SendRecoveryOtp","email","setOtpEmail","VerifyRecoveryOtp","otp","getOtpEmail","setOtpCode","RecoveryResetPass","Password","getOtpCode","useEffect","ProfileRequest","position","top","viewBox","xlinkHref","Image","HtmlParse","Post","href","Github","target","Linkedin","Twitter","Facebook","title","Birthday","Address","Email","Phone","Cv","left","content","parse","msg","cogoToast","success"],"sourceRoot":""}
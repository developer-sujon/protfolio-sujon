{"version":3,"file":"static/js/108.208b9e67.chunk.js","mappings":"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","sources":["APIRequest/BlogRequest.js","APIRequest/RestClient.js","components/Blog/BlogCreate.jsx","helper/FormValidation.js","helper/ToastMessage.js"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetBlog, SetBlogList, SetTotalPage } from \"../redux/slices/BlogSlice\";\r\n\r\nclass BlogRequest {\r\n  static async BlogList(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Blog/BlogList/${pageNumber}/${perPage}/${searchKey}`,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetBlogList(data[0]?.Data));\r\n      store.dispatch(SetTotalPage(data[0]?.Total[0]?.count));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async BlogSingle(id) {\r\n    const { data } = await RestClient.getRequest(`/Blog/BlogSingle/${id}`);\r\n    if (data) {\r\n      store.dispatch(SetBlog(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async BlogCreate(postBody) {\r\n    const { data } = await RestClient.postRequest(`/Blog/BlogCreate`, postBody);\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async BlogUpdate(id, postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/Blog/BlogUpdate/${id}`,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async BlogDelete(id) {\r\n    await RestClient.deleteRequest(`/Blog/BlogDelete/${id}`);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default BlogRequest;\r\n","//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","import React, { useRef } from \"react\";\r\nimport { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nimport BlogRequest from \"../../APIRequest/BlogRequest\";\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport ToastMessage from \"../../helper/ToastMessage\";\r\n\r\nconst BlogCreate = () => {\r\n  let titleRef,\r\n    imageRef,\r\n    descriptionRef,\r\n    previewRef = useRef();\r\n  let navigate = useNavigate();\r\n\r\n  const preview = (event) => {\r\n    previewRef.src = URL.createObjectURL(event.target.files[0]);\r\n  };\r\n\r\n  const CreateNew = (e) => {\r\n    e.preventDefault();\r\n    const postBody = new FormData();\r\n    postBody.append(\"Title\", titleRef.value);\r\n    postBody.append(\"Image\", imageRef.files[0]);\r\n    postBody.append(\"Description\", descriptionRef.value);\r\n\r\n    if (FormValidation.isEmpty(titleRef.value)) {\r\n      ToastMessage.errorMessage(\"Blog Name is Required\");\r\n    } else if (!imageRef.files[0]) {\r\n      ToastMessage.errorMessage(\"Blog Image is Required\");\r\n    } else if (FormValidation.isEmpty(descriptionRef.value)) {\r\n      ToastMessage.errorMessage(\"Blog Description is Required\");\r\n    } else {\r\n      BlogRequest.BlogCreate(postBody).then((result) => {\r\n        if (result) {\r\n          navigate(\"/blog-list\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid={true} className=\"content-body\">\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <Col className=\"col-12 col-lg-8  col-sm-12 col-md-8  p-2\">\r\n          <Card>\r\n            <Card.Body>\r\n              <h4>Create New Blog</h4>\r\n              <br />\r\n              <img\r\n                className=\"w-20\"\r\n                ref={(input) => (previewRef = input)}\r\n                src=\"\"\r\n                alt=\"\"\r\n              />\r\n              <hr />\r\n              <Form onSubmit={CreateNew}>\r\n                <Form.Group className=\"mb-3\" controlId=\"Title\">\r\n                  <Form.Label>Blog Title</Form.Label>\r\n                  <Form.Control\r\n                    ref={(input) => (titleRef = input)}\r\n                    placeholder=\"Blog Title\"\r\n                    className=\"animated fadeInUp\"\r\n                    type=\"text\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"Image\">\r\n                  <Form.Label>Blog Image</Form.Label>\r\n                  <Form.Control\r\n                    ref={(input) => (imageRef = input)}\r\n                    placeholder=\"Blog Image\"\r\n                    className=\"form-control animated fadeInUp\"\r\n                    type=\"file\"\r\n                    onChange={preview}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <br />\r\n\r\n                <Form.Group controlId=\"Description\">\r\n                  <Form.Label>Blog Description</Form.Label>\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    ref={(input) => (descriptionRef = input)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  className=\"animated fadeInUp float-end mb-0 mt-4\"\r\n                >\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n              <br />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogCreate;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["BlogRequest","pageNumber","perPage","searchKey","RestClient","data","store","SetBlogList","Data","SetTotalPage","Total","count","id","SetBlog","postBody","ToastMessage","message","axiosHeaders","axios","SessionHelper","ResponseReturn","response","RemoveLoading","ErrorReturn","error","status","SetLogout","RemoveUserDetails","url","SetLoading","then","catch","titleRef","imageRef","descriptionRef","previewRef","useRef","navigate","useNavigate","fluid","className","ref","input","src","alt","onSubmit","e","preventDefault","FormData","append","value","files","FormValidation","result","controlId","placeholder","type","onChange","event","URL","createObjectURL","target","theme","variant","length","test","msg","cogoToast","position"],"sourceRoot":""}
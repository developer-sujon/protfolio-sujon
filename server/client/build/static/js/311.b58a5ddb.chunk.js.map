{"version":3,"file":"static/js/311.b58a5ddb.chunk.js","mappings":"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","sources":["APIRequest/RestClient.js","APIRequest/AuthRequest.js","components/Auth/LoginUser/LoginUser.jsx","helper/FormValidation.js","helper/ToastMessage.js"],"sourcesContent":["//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogin } from \"../redux/slices/AuthSlice\";\r\n\r\nclass AuthRequest {\r\n  static async Login(postBody) {\r\n    const { data } = await RestClient.postRequest(\"/Auth/LoginUser\", postBody);\r\n    if (data) {\r\n      store.dispatch(SetLogin(data?.accessToken));\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async Register(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      \"/Auth/RegisterUser\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AuthRequest;\r\n","//External Import\r\nimport { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Col, Row, Card, Form, Button } from \"react-bootstrap\";\r\n\r\n//Internal Import\r\nimport FormValidation from \"../../../helper/FormValidation\";\r\nimport ToastMessage from \"../../../helper/ToastMessage\";\r\nimport AuthRequest from \"../../../APIRequest/AuthRequest\";\r\n\r\nconst LoginUser = () => {\r\n  let passRef,\r\n    emailRef = useRef();\r\n\r\n  const SubmitLogin = (e) => {\r\n    e.preventDefault();\r\n    const email = emailRef.value;\r\n    const password = passRef.value;\r\n\r\n    if (!FormValidation.isEmail(email)) {\r\n      ToastMessage.errorMessage(\"Invalid Email Address\");\r\n    } else if (FormValidation.isEmpty(password)) {\r\n      ToastMessage.errorMessage(\"Password Is Required\");\r\n    } else {\r\n      AuthRequest.Login({ Email: email, Password: password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={7} lg={6} className=\"\" style={{ marginTop: \"100px\" }}>\r\n          <Card className=\"w-90 p-4\">\r\n            <Card.Body>\r\n              <Card.Title>Login Your Account</Card.Title>\r\n\r\n              <Form onSubmit={SubmitLogin}>\r\n                <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                  <Form.Label>User Email Or Phone</Form.Label>\r\n                  <Form.Control\r\n                    ref={(input) => (emailRef = input)}\r\n                    placeholder=\"User Email Or Phone\"\r\n                    className=\"form-control animated fadeInUp\"\r\n                    type=\"text\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                  <Form.Label>User Password</Form.Label>\r\n                  <Form.Control\r\n                    ref={(input) => (passRef = input)}\r\n                    placeholder=\"User Password\"\r\n                    className=\"form-control animated fadeInUp\"\r\n                    type=\"password\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"success\"\r\n                  className=\"w-100 animated fadeInUp float-end\"\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Form>\r\n\r\n              <div className=\"text-center w-100\">\r\n                <br />\r\n                <Link className=\"text-center animated fadeInUp\" to=\"/send-otp\">\r\n                  Forget Password\r\n                </Link>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axiosHeaders","axios","SessionHelper","ResponseReturn","response","store","RemoveLoading","ErrorReturn","error","status","ToastMessage","data","message","SetLogout","RemoveUserDetails","RestClient","url","SetLoading","then","catch","postBody","AuthRequest","SetLogin","accessToken","passRef","emailRef","useRef","Container","Row","className","Col","md","lg","style","marginTop","Card","Form","onSubmit","e","preventDefault","email","value","password","FormValidation","Email","Password","controlId","ref","input","placeholder","type","Button","variant","to","length","test","msg","cogoToast","position"],"sourceRoot":""}
{"version":3,"file":"static/js/36.cbd0998d.chunk.js","mappings":"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","sources":["APIRequest/ProfileRequest.js","APIRequest/RestClient.js","helper/GetBase64.js","components/User/Profile/Profile.jsx","helper/FormValidation.js","helper/ToastMessage.js"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\n\r\nclass ProfileRequest {\r\n  static async UserDetails() {\r\n    const { data } = await RestClient.getRequest(\"/user/UserDetails\");\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserUpdate(postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      \"/user/UserUpdate\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserChecgePassword(postBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      \"/user/UserChangePassword\",\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/SendRecoveryOtp/${email}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.setOtpEmail(email);\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyRecoveryOtp/${SessionHelper.getOtpEmail()}/${otp}`,\r\n    );\r\n\r\n    if (data) {\r\n      SessionHelper.setOtpCode(otp);\r\n      ToastMessage.successMessage(data.message);\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(Password) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/User/RecoveryResetPass/${SessionHelper.getOtpEmail()}/${SessionHelper.getOtpCode()}`,\r\n      Password,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileRequest;\r\n","//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","const GetBase64 = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n\r\nexport default GetBase64;\r\n","//External Lib Import\r\nimport { useRef } from \"react\";\r\nimport { Container, Col, Row, Card, Form, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProfileRequest from \"../../../APIRequest/ProfileRequest\";\r\n\r\n//Internal Lib Import\r\nimport FormValidation from \"../../../helper/FormValidation\";\r\nimport GetBase64 from \"../../../helper/GetBase64\";\r\nimport ToastMessage from \"../../../helper/ToastMessage\";\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useSelector((state) => state.Profile);\r\n\r\n  let UserNameRef,\r\n    UserMobileRef,\r\n    UserImgRef,\r\n    UserImgView,\r\n    UserPostRef,\r\n    UserCvRef,\r\n    UserFacebookRef,\r\n    UserGithubRef,\r\n    UserLinkedinRef,\r\n    UserBirthdayRef,\r\n    UserAddressRef,\r\n    UserMapRef,\r\n    UserAboutMeRef = useRef();\r\n\r\n  const previewImage = () => {\r\n    const imgFile = UserImgRef.files[0];\r\n    GetBase64(imgFile).then((base64Img) => {\r\n      UserImgView.src = base64Img;\r\n    });\r\n  };\r\n\r\n  const updateProfile = (e) => {\r\n    e.preventDefault();\r\n    if (FormValidation.isEmpty(UserNameRef.value)) {\r\n      ToastMessage.errorMessage(\"Name is Required\");\r\n    } else if (!FormValidation.isMobile(UserMobileRef.value)) {\r\n      ToastMessage.errorMessage(\"Invalid Mobile Number\");\r\n    } else {\r\n      const Name = UserNameRef.value;\r\n      const Phone = UserMobileRef.value;\r\n      const Image = UserImgView.src;\r\n      const Post = UserPostRef.value;\r\n      const Cv = UserCvRef.value;\r\n      const Facebook = UserFacebookRef.value;\r\n      const Github = UserGithubRef.value;\r\n      const Linkedin = UserLinkedinRef.value;\r\n      const Birthday = UserBirthdayRef.value;\r\n      const Address = UserAddressRef.value;\r\n      const AboutMe = UserAboutMeRef.value;\r\n      const MapLink = UserMapRef.value;\r\n\r\n      ProfileRequest.UserUpdate({\r\n        Name,\r\n        Phone,\r\n        Image,\r\n        Post,\r\n        Cv,\r\n        Facebook,\r\n        Github,\r\n        Linkedin,\r\n        Birthday,\r\n        Address,\r\n        AboutMe,\r\n        MapLink,\r\n      }).then((result) => {\r\n        if (result) {\r\n          navigate(\"/\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"justify-content-center\">\r\n        <Col>\r\n          <Card className=\"w-90\">\r\n            <Card.Body>\r\n              <img\r\n                ref={(input) => (UserImgView = input)}\r\n                className=\"icon-nav-img-lg\"\r\n                src={user?.Image}\r\n                alt={user?.Name}\r\n                style={{ maxWidth: \"200px\" }}\r\n              />\r\n              <hr />\r\n\r\n              <Form onSubmit={updateProfile}>\r\n                <Row>\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group className=\"mb-3\" controlId=\"photo\">\r\n                      <Form.Label>Profile Picture</Form.Label>\r\n                      <Form.Control\r\n                        onChange={previewImage}\r\n                        ref={(input) => (UserImgRef = input)}\r\n                        placeholder=\"User Email\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"file\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                      <Form.Label>Email Address</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Email}\r\n                        readOnly={true}\r\n                        placeholder=\"User Email\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"email\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Name</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Name}\r\n                        ref={(input) => (UserNameRef = input)}\r\n                        placeholder=\"Name\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"text\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Mobile</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Phone}\r\n                        ref={(input) => (UserMobileRef = input)}\r\n                        placeholder=\"Mobile\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"text\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Post</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Post}\r\n                        ref={(input) => (UserPostRef = input)}\r\n                        placeholder=\"Post\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"text\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Cv</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Cv}\r\n                        ref={(input) => (UserCvRef = input)}\r\n                        placeholder=\"Cv\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"url\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Facebook</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Facebook}\r\n                        ref={(input) => (UserFacebookRef = input)}\r\n                        placeholder=\"Facebook\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"url\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Github</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Github}\r\n                        ref={(input) => (UserGithubRef = input)}\r\n                        placeholder=\"Github\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"url\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Linkedin</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Linkedin}\r\n                        ref={(input) => (UserLinkedinRef = input)}\r\n                        placeholder=\"Linkedin\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"url\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Birthday</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Birthday}\r\n                        ref={(input) => (UserBirthdayRef = input)}\r\n                        placeholder=\"Birthday\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"date\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Address</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.Address}\r\n                        ref={(input) => (UserAddressRef = input)}\r\n                        placeholder=\"Address\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"text\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={4} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>Google Map Link</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.MapLink}\r\n                        ref={(input) => (UserMapRef = input)}\r\n                        placeholder=\"Google Map Link\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        type=\"url\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col md={12} className=\"p-2\">\r\n                    <Form.Group>\r\n                      <Form.Label>AboutMe</Form.Label>\r\n                      <Form.Control\r\n                        key={Date.now()}\r\n                        defaultValue={user?.AboutMe}\r\n                        ref={(input) => (UserAboutMeRef = input)}\r\n                        placeholder=\"AboutMe\"\r\n                        className=\"form-control animated fadeInUp\"\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n\r\n                  <Col className=\"p-2\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"success\"\r\n                      className=\"w-100 animated fadeInUp float-end mb-0 mt-4\"\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["ProfileRequest","RestClient","data","store","SetUserDetails","postBody","ToastMessage","message","email","SessionHelper","otp","Password","axiosHeaders","axios","ResponseReturn","response","RemoveLoading","ErrorReturn","error","status","SetLogout","RemoveUserDetails","url","SetLoading","then","catch","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","UserNameRef","UserMobileRef","UserImgRef","UserImgView","UserPostRef","UserCvRef","UserFacebookRef","UserGithubRef","UserLinkedinRef","UserBirthdayRef","UserAddressRef","UserMapRef","navigate","useNavigate","user","useSelector","state","Profile","UserAboutMeRef","useRef","Container","fluid","Row","className","Col","Card","ref","input","src","Image","alt","Name","style","maxWidth","Form","onSubmit","e","preventDefault","FormValidation","value","Phone","Post","Cv","Facebook","Github","Linkedin","Birthday","Address","AboutMe","MapLink","md","controlId","onChange","imgFile","files","GetBase64","base64Img","placeholder","type","defaultValue","Email","readOnly","Date","now","as","rows","Button","variant","length","test","msg","cogoToast","position"],"sourceRoot":""}
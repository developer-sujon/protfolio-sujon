{"version":3,"file":"static/js/418.4425a21c.chunk.js","mappings":"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","sources":["APIRequest/RestClient.js","APIRequest/SkillRequest.js","components/Skill/SkillCreate.jsx","helper/FormValidation.js","helper/ToastMessage.js"],"sourcesContent":["//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport {\r\n  SetEdudation,\r\n  SetEdudationList,\r\n  SetTotalPage,\r\n} from \"../redux/slices/SkillSlice\";\r\n\r\nclass SkillRequest {\r\n  static async SkillList(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Skill/SkillList/${pageNumber}/${perPage}/${searchKey}`,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetEdudationList(data[0]?.Data));\r\n      store.dispatch(SetTotalPage(data[0]?.Total[0]?.count));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SkillSingle(id) {\r\n    const { data } = await RestClient.getRequest(`/Skill/SkillSingle/${id}`);\r\n\r\n    if (data) {\r\n      store.dispatch(SetEdudation(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SkillCreate(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/Skill/SkillCreate`,\r\n      postBody,\r\n    );\r\n    if (data) ToastMessage.successMessage(data.message);\r\n    return true;\r\n  }\r\n\r\n  static async SkillUpdate(id, postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/Skill/SkillUpdate/${id}`,\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SkillDelete(id) {\r\n    await RestClient.deleteRequest(`/Skill/SkillDelete/${id}`);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default SkillRequest;\r\n","import React, { useRef } from \"react\";\r\nimport { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SkillRequest from \"../../APIRequest/SkillRequest\";\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport ToastMessage from \"../../helper/ToastMessage\";\r\n\r\nconst SkillCreate = () => {\r\n  let nameRef,\r\n    percentageRef = useRef();\r\n  let navigate = useNavigate();\r\n\r\n  const CreateNew = (e) => {\r\n    e.preventDefault();\r\n    const Name = nameRef.value;\r\n    const Percentage = percentageRef.value;\r\n\r\n    if (FormValidation.isEmpty(Name)) {\r\n      ToastMessage.errorMessage(\"Skill Name is Required\");\r\n    } else if (FormValidation.isEmpty(Percentage)) {\r\n      ToastMessage.errorMessage(\"Skill Percentage is Required\");\r\n    } else {\r\n      SkillRequest.SkillCreate({ Name, Percentage }).then((result) => {\r\n        if (result) {\r\n          navigate(\"/Skill-list\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid={true} className=\"content-body\">\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <Col className=\"col-12 col-lg-8  col-sm-12 col-md-8  p-2\">\r\n          <Card>\r\n            <Card.Body>\r\n              <h4>Create New Skill</h4>\r\n              <br />\r\n\r\n              <Form onSubmit={CreateNew}>\r\n                <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                  <Form.Label>Skill Name</Form.Label>\r\n                  <Form.Control\r\n                    ref={(input) => (nameRef = input)}\r\n                    placeholder=\"Skill Name\"\r\n                    className=\"animated fadeInUp\"\r\n                    type=\"text\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"Date\">\r\n                  <Form.Label>Skill Percentage</Form.Label>\r\n                  <Form.Control\r\n                    ref={(input) => (percentageRef = input)}\r\n                    placeholder=\"Skill Date\"\r\n                    className=\"form-control animated fadeInUp\"\r\n                    type=\"number\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <br />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  className=\"animated fadeInUp float-end mb-0 mt-4\"\r\n                >\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n\r\n              <br />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SkillCreate;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axiosHeaders","axios","SessionHelper","ResponseReturn","response","store","RemoveLoading","ErrorReturn","error","status","ToastMessage","data","message","SetLogout","RemoveUserDetails","RestClient","url","SetLoading","then","catch","postBody","SkillRequest","pageNumber","perPage","searchKey","SetEdudationList","Data","SetTotalPage","Total","count","id","SetEdudation","nameRef","percentageRef","useRef","navigate","useNavigate","fluid","className","onSubmit","e","preventDefault","Name","value","Percentage","FormValidation","result","controlId","ref","input","placeholder","type","variant","length","test","msg","cogoToast","position"],"sourceRoot":""}
{"version":3,"file":"static/js/577.c89c6b57.chunk.js","mappings":"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","sources":["APIRequest/ClientRequest.js","APIRequest/RestClient.js","components/Client/ClientUpdate.jsx","helper/ToastMessage.js"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport {\r\n  SetClient,\r\n  SetClientList,\r\n  SetTotalPage,\r\n} from \"../redux/slices/ClientSlice\";\r\n\r\nclass ClientRequest {\r\n  static async ClientList(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Client/ClientList/${pageNumber}/${perPage}/${searchKey}`,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetClientList(data[0]?.Data));\r\n      store.dispatch(SetTotalPage(data[0]?.Total[0]?.count));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientSingle(id) {\r\n    const { data } = await RestClient.getRequest(`/Client/ClientSingle/${id}`);\r\n    if (data) {\r\n      store.dispatch(SetClient(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientCreate(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/Client/ClientCreate`,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientUpdate(id, postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/Client/ClientUpdate/${id}`,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientDelete(id) {\r\n    await RestClient.deleteRequest(`/Client/ClientDelete/${id}`);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default ClientRequest;\r\n","//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//External Lib Import\r\nimport { useRef } from \"react\";\r\nimport { Container, Col, Row, Card, Form, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n//Internal Lib Import\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport ToastMessage from \"../../helper/ToastMessage\";\r\nimport ClientRequest from \"../../APIRequest/ClientRequest\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ClientUpdate = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    ClientRequest.ClientSingle(id);\r\n  }, [id]);\r\n\r\n  const { Client } = useSelector((state) => state.Client);\r\n\r\n  let imageRef,\r\n    previewRef = useRef();\r\n\r\n  const preview = (event) => {\r\n    previewRef.src = URL.createObjectURL(event.target.files[0]);\r\n  };\r\n\r\n  const CreateNew = (e) => {\r\n    e.preventDefault();\r\n    const postBody = new FormData();\r\n    postBody.append(\"Image\", imageRef.files[0]);\r\n\r\n    if (!imageRef.files[0]) {\r\n      ToastMessage.errorMessage(\"Client Image is Required\");\r\n    } else {\r\n      ClientRequest.ClientUpdate(id, postBody).then((result) => {\r\n        if (result) {\r\n          navigate(\"/Client-list\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid={true} className=\"content-body\">\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <Col className=\"col-12 col-lg-8  col-sm-12 col-md-8  p-2\">\r\n          <Card>\r\n            <Card.Body>\r\n              <h4>Create New Client</h4>\r\n              <br />\r\n              <img\r\n                className=\"w-20\"\r\n                ref={(input) => (previewRef = input)}\r\n                src={Client?.Image}\r\n                alt=\"\"\r\n              />\r\n              <hr />\r\n              <Form onSubmit={CreateNew}>\r\n                <Form.Group className=\"mb-3\" controlId=\"Image\">\r\n                  <Form.Label>Client Image</Form.Label>\r\n                  <Form.Control\r\n                    ref={(input) => (imageRef = input)}\r\n                    placeholder=\"Client Image\"\r\n                    className=\"form-control animated fadeInUp\"\r\n                    type=\"file\"\r\n                    onChange={preview}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <br />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  className=\"animated fadeInUp float-end mb-0 mt-4\"\r\n                >\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n              <br />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientUpdate;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["ClientRequest","pageNumber","perPage","searchKey","RestClient","data","store","SetClientList","Data","SetTotalPage","Total","count","id","SetClient","postBody","ToastMessage","message","axiosHeaders","axios","SessionHelper","ResponseReturn","response","RemoveLoading","ErrorReturn","error","status","SetLogout","RemoveUserDetails","url","SetLoading","then","catch","useParams","navigate","useNavigate","useEffect","imageRef","Client","useSelector","state","previewRef","useRef","fluid","className","ref","input","src","Image","alt","onSubmit","e","preventDefault","FormData","append","files","result","controlId","placeholder","type","onChange","event","URL","createObjectURL","target","variant","msg","cogoToast","position"],"sourceRoot":""}
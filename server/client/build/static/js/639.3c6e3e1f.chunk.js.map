{"version":3,"file":"static/js/639.3c6e3e1f.chunk.js","mappings":"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","sources":["APIRequest/ClientRequest.js","APIRequest/RestClient.js","components/Client/ClientList.jsx","helper/AleartMessage.js","helper/ToastMessage.js"],"sourcesContent":["//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport {\r\n  SetClient,\r\n  SetClientList,\r\n  SetTotalPage,\r\n} from \"../redux/slices/ClientSlice\";\r\n\r\nclass ClientRequest {\r\n  static async ClientList(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Client/ClientList/${pageNumber}/${perPage}/${searchKey}`,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetClientList(data[0]?.Data));\r\n      store.dispatch(SetTotalPage(data[0]?.Total[0]?.count));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientSingle(id) {\r\n    const { data } = await RestClient.getRequest(`/Client/ClientSingle/${id}`);\r\n    if (data) {\r\n      store.dispatch(SetClient(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientCreate(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      `/Client/ClientCreate`,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientUpdate(id, postBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/Client/ClientUpdate/${id}`,\r\n      postBody,\r\n    );\r\n\r\n    if (data) {\r\n      ToastMessage.successMessage(data.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ClientDelete(id) {\r\n    await RestClient.deleteRequest(`/Client/ClientDelete/${id}`);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default ClientRequest;\r\n","//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { AiOutlineEdit, AiFillDelete } from \"react-icons/ai\";\r\n\r\n//Internal Import\r\nimport ClientRequest from \"../../APIRequest/ClientRequest\";\r\nimport AleartMessage from \"../../helper/AleartMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClientList = () => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [searchKey, setSearchKey] = useState(0);\r\n\r\n  useEffect(() => {\r\n    ClientRequest.ClientList(pageNumber, perPage, searchKey);\r\n  }, [pageNumber, perPage, searchKey]);\r\n\r\n  const { ClientList, TotalClient } = useSelector((state) => state.Client);\r\n\r\n  const perPageOnChange = (e) => {\r\n    setPerPage(e.target.value);\r\n  };\r\n\r\n  const searchKeywordOnChange = (e) => {\r\n    const key = e.target.value || 0;\r\n    setSearchKey(key);\r\n  };\r\n\r\n  const searchData = () => {\r\n    ClientRequest.ClientList(pageNumber, perPage, searchKey);\r\n  };\r\n\r\n  const handlePageClick = (e) => {\r\n    setPageNumber(e.selected + 1);\r\n    console.log(pageNumber);\r\n    console.log(e.selected);\r\n  };\r\n\r\n  const deleteEducaion = (id) => {\r\n    AleartMessage.deleteAleart(ClientRequest.ClientDelete, id).then(() => {\r\n      ClientRequest.ClientList(pageNumber, perPage, searchKey);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <h5>My Client List {TotalClient}</h5>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <select\r\n                      onChange={perPageOnChange}\r\n                      className=\"form-control mx-2 form-select-sm form-select form-control-sm\"\r\n                    >\r\n                      <option value=\"5\" selected>\r\n                        5 Per Page\r\n                      </option>\r\n                      <option value=\"10\">10 Per Page</option>\r\n                      <option value=\"20\">20 Per Page</option>\r\n                      <option value=\"30\">30 Per Page</option>\r\n                      <option value=\"50\">50 Per Page</option>\r\n                      <option value=\"100\">100 Per Page</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <div className=\"input-group mb-3\">\r\n                      <input\r\n                        onChange={searchKeywordOnChange}\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-sm\"\r\n                        placeholder=\"Search..\"\r\n                        aria-label=\"Recipient's username\"\r\n                        aria-describedby=\"button-addon2\"\r\n                      />\r\n                      <button\r\n                        onClick={searchData}\r\n                        className=\"btn  btn-outline-primary btn-sm mb-0\"\r\n                        type=\"button\"\r\n                      >\r\n                        Search\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"table-responsive data-table\">\r\n                      <table className=\"table \">\r\n                        <thead className=\"sticky-top bg-white\">\r\n                          <tr>\r\n                            <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder\">\r\n                              Image\r\n                            </th>\r\n\r\n                            <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder\">\r\n                              Edit\r\n                            </th>\r\n                            <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder\">\r\n                              Delete\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {ClientList &&\r\n                            ClientList.map((item, i) => (\r\n                              <tr>\r\n                                <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder \">\r\n                                  <img\r\n                                    src={item.Image}\r\n                                    className=\"avatar me-3\"\r\n                                  />\r\n                                </th>\r\n\r\n                                <td>\r\n                                  <Link\r\n                                    to={`/Client-update/${item._id}`}\r\n                                    className=\"btn-xm mb-0 bg-gradient-warning btn \"\r\n                                  >\r\n                                    <AiOutlineEdit />\r\n                                  </Link>\r\n                                </td>\r\n                                <td>\r\n                                  <Button\r\n                                    className=\"btn-xm mb-0 bg-gradient-danger\"\r\n                                    onClick={() => deleteEducaion(item._id)}\r\n                                  >\r\n                                    <AiFillDelete />\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 mt-5\">\r\n                    <nav aria-label=\"Page navigation example\">\r\n                      <ReactPaginate\r\n                        previousLabel=\"<\"\r\n                        nextLabel=\">\"\r\n                        pageClassName=\"page-item\"\r\n                        pageLinkClassName=\"page-link\"\r\n                        previousClassName=\"page-item\"\r\n                        previousLinkClassName=\"page-link\"\r\n                        nextClassName=\"page-item\"\r\n                        nextLinkClassName=\"page-link\"\r\n                        breakLabel=\"...\"\r\n                        breakClassName=\"page-item\"\r\n                        breakLinkClassName=\"page-link\"\r\n                        pageCount={TotalClient / perPage}\r\n                        marginPagesDisplayed={2}\r\n                        pageRangeDisplayed={5}\r\n                        onPageChange={handlePageClick}\r\n                        containerClassName=\"pagination\"\r\n                        activeClassName=\"active\"\r\n                      />\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientList;\r\n","//external import\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass AleartMessage {\r\n  static deleteAleart(deleteRequiest, id) {\r\n    return Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        return deleteRequiest(id).then((result) => {\r\n          if (result) {\r\n            Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  static updateAleart(updateRequiest, id, status) {\r\n    return Swal.fire({\r\n      title: \"Change Status\",\r\n      input: \"select\",\r\n      inputOptions: {\r\n        Deactive: \"Deactive\",\r\n        Active: \"Active\",\r\n      },\r\n      inputValue: status,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        return updateRequiest(id, result.value).then((result) => {\r\n          if (result) {\r\n            Swal.fire(\"Update!\", \"Comment Update.\", \"success\");\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default AleartMessage;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["ClientRequest","pageNumber","perPage","searchKey","RestClient","data","store","SetClientList","Data","SetTotalPage","Total","count","id","SetClient","postBody","ToastMessage","message","axiosHeaders","axios","SessionHelper","ResponseReturn","response","RemoveLoading","ErrorReturn","error","status","SetLogout","RemoveUserDetails","url","SetLoading","then","catch","useState","setPageNumber","setPerPage","setSearchKey","useEffect","useSelector","state","Client","ClientList","TotalClient","className","onChange","e","target","value","selected","key","type","placeholder","onClick","map","item","i","src","Image","to","_id","AleartMessage","previousLabel","nextLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","console","log","containerClassName","activeClassName","deleteRequiest","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","updateRequiest","input","inputOptions","Deactive","Active","inputValue","msg","cogoToast","position"],"sourceRoot":""}
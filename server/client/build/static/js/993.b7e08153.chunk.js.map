{"version":3,"file":"static/js/993.b7e08153.chunk.js","mappings":"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","sources":["APIRequest/RestClient.js","APIRequest/CommentRequest.js","components/Comments/CommentsList.jsx","helper/AleartMessage.js","helper/ToastMessage.js"],"sourcesContent":["//External import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/ProfileSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.getToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n  if (error.response.status === 500) {\r\n    ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n  } else if (error.response.status === 401) {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n    store.dispatch(SetLogout());\r\n    store.dispatch(RemoveUserDetails());\r\n  } else {\r\n    ToastMessage.errorMessage(error.response.data.message);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//Internal Import\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\nimport { SetCommentList, SetTotalPage } from \"../redux/slices/CommentSlice\";\r\n\r\nclass CommentRequest {\r\n  static async CommentList(pageNumber, perPage, searchKey) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Comment/CommentList/${pageNumber}/${perPage}/${searchKey}`,\r\n    );\r\n\r\n    if (data) {\r\n      store.dispatch(SetCommentList(data[0]?.Data));\r\n      store.dispatch(SetTotalPage(data[0]?.Total[0]?.count));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async CommentUpdate(id, status) {\r\n    await RestClient.updateRequest(`/Comment/CommentUpdate/${id}`, {\r\n      Status: status,\r\n    });\r\n    return true;\r\n  }\r\n\r\n  static async CommentDelete(id) {\r\n    await RestClient.deleteRequest(`/Comment/CommentDelete/${id}`);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default CommentRequest;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { AiOutlineEdit, AiFillDelete } from \"react-icons/ai\";\r\n\r\n//Internal Import\r\nimport CommentRequest from \"../../APIRequest/CommentRequest\";\r\nimport AleartMessage from \"../../helper/AleartMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CommentList = () => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [searchKey, setSearchKey] = useState(0);\r\n\r\n  useEffect(() => {\r\n    CommentRequest.CommentList(pageNumber, perPage, searchKey);\r\n  }, [pageNumber, perPage, searchKey]);\r\n\r\n  const { CommentList, TotalComment } = useSelector((state) => state.Comment);\r\n\r\n  const perPageOnChange = (e) => {\r\n    setPerPage(e.target.value);\r\n  };\r\n\r\n  const searchKeywordOnChange = (e) => {\r\n    const key = e.target.value || 0;\r\n    setSearchKey(key);\r\n  };\r\n\r\n  const searchData = () => {\r\n    CommentRequest.CommentList(pageNumber, perPage, searchKey);\r\n  };\r\n\r\n  const handlePageClick = (e) => {\r\n    setPageNumber(e.selected + 1);\r\n    console.log(pageNumber);\r\n    console.log(e.selected);\r\n  };\r\n\r\n  const deleteComment = (id) => {\r\n    AleartMessage.deleteAleart(CommentRequest.CommentDelete, id).then((result) => {\r\n      if (result) {\r\n        CommentRequest.CommentList(pageNumber, perPage, searchKey);\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateComment = (id, status) => {\r\n    AleartMessage.updateAleart(CommentRequest.CommentUpdate, id, status).then(\r\n      (result) => {\r\n        if (result) {\r\n          CommentRequest.CommentList(pageNumber, perPage, searchKey);\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <h5>My Comment List {TotalComment}</h5>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <select\r\n                      onChange={perPageOnChange}\r\n                      className=\"form-control mx-2 form-select-sm form-select form-control-sm\"\r\n                    >\r\n                      <option value=\"5\" selected>\r\n                        5 Per Page\r\n                      </option>\r\n                      <option value=\"10\">10 Per Page</option>\r\n                      <option value=\"20\">20 Per Page</option>\r\n                      <option value=\"30\">30 Per Page</option>\r\n                      <option value=\"50\">50 Per Page</option>\r\n                      <option value=\"100\">100 Per Page</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <div className=\"input-group mb-3\">\r\n                      <input\r\n                        onChange={searchKeywordOnChange}\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-sm\"\r\n                        placeholder=\"Search..\"\r\n                        aria-label=\"Recipient's username\"\r\n                        aria-describedby=\"button-addon2\"\r\n                      />\r\n                      <button\r\n                        onClick={searchData}\r\n                        className=\"btn  btn-outline-primary btn-sm mb-0\"\r\n                        type=\"button\"\r\n                      >\r\n                        Search\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"table-responsive data-table\">\r\n                      <table className=\"table \">\r\n                        <thead className=\"sticky-top bg-white\">\r\n                          <tr>\r\n                            <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">\r\n                              Status\r\n                            </th>\r\n                            <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2\">\r\n                              Name\r\n                            </th>\r\n                            <th className=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2\">\r\n                              Message\r\n                            </th>\r\n                            <th className=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">\r\n                              Update\r\n                            </th>\r\n                            <th className=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">\r\n                              Delete\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {CommentList &&\r\n                            CommentList.map((item, i) => (\r\n                              <tr>\r\n                                <td>\r\n                                  <p className=\"text-xs font-weight-bold mb-0\">\r\n                                    {item.Status}\r\n                                  </p>\r\n                                </td>\r\n                                <td>\r\n                                  <p className=\"text-xs font-weight-bold mb-0\">\r\n                                    {item.UserName}\r\n                                  </p>\r\n                                </td>\r\n                                <td>\r\n                                  <p className=\"text-xs font-weight-bold mb-0\">\r\n                                    {item.Description}\r\n                                  </p>\r\n                                </td>\r\n                                <td>\r\n                                  <Button\r\n                                    className=\"btn-xm mb-0 bg-gradient-warning \"\r\n                                    onClick={() =>\r\n                                      updateComment(item._id, item.Status)\r\n                                    }\r\n                                  >\r\n                                    <AiOutlineEdit />\r\n                                  </Button>\r\n                                </td>\r\n                                <td>\r\n                                  <Button\r\n                                    className=\"btn-xm mb-0 bg-gradient-danger\"\r\n                                    onClick={() => deleteComment(item._id)}\r\n                                  >\r\n                                    <AiFillDelete />\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 mt-5\">\r\n                    <nav aria-label=\"Page navigation example\">\r\n                      <ReactPaginate\r\n                        previousLabel=\"<\"\r\n                        nextLabel=\">\"\r\n                        pageClassName=\"page-item\"\r\n                        pageLinkClassName=\"page-link\"\r\n                        previousClassName=\"page-item\"\r\n                        previousLinkClassName=\"page-link\"\r\n                        nextClassName=\"page-item\"\r\n                        nextLinkClassName=\"page-link\"\r\n                        breakLabel=\"...\"\r\n                        breakClassName=\"page-item\"\r\n                        breakLinkClassName=\"page-link\"\r\n                        pageCount={TotalComment / perPage}\r\n                        marginPagesDisplayed={2}\r\n                        pageRangeDisplayed={5}\r\n                        onPageChange={handlePageClick}\r\n                        containerClassName=\"pagination\"\r\n                        activeClassName=\"active\"\r\n                      />\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","//external import\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass AleartMessage {\r\n  static deleteAleart(deleteRequiest, id) {\r\n    return Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        return deleteRequiest(id).then((result) => {\r\n          if (result) {\r\n            Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  static updateAleart(updateRequiest, id, status) {\r\n    return Swal.fire({\r\n      title: \"Change Status\",\r\n      input: \"select\",\r\n      inputOptions: {\r\n        Deactive: \"Deactive\",\r\n        Active: \"Active\",\r\n      },\r\n      inputValue: status,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        return updateRequiest(id, result.value).then((result) => {\r\n          if (result) {\r\n            Swal.fire(\"Update!\", \"Comment Update.\", \"success\");\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default AleartMessage;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axiosHeaders","axios","SessionHelper","ResponseReturn","response","store","RemoveLoading","ErrorReturn","error","status","ToastMessage","data","message","SetLogout","RemoveUserDetails","RestClient","url","SetLoading","then","catch","postBody","CommentRequest","pageNumber","perPage","searchKey","SetCommentList","Data","SetTotalPage","Total","count","id","Status","useState","setPageNumber","setPerPage","setSearchKey","useEffect","useSelector","state","Comment","CommentList","TotalComment","className","onChange","e","target","value","selected","key","type","placeholder","onClick","map","item","i","UserName","Description","Button","_id","AleartMessage","result","previousLabel","nextLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","console","log","containerClassName","activeClassName","deleteRequiest","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","updateRequiest","input","inputOptions","Deactive","Active","inputValue","msg","cogoToast","position"],"sourceRoot":""}